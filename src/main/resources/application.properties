server.port=8001
# ????
## ??
#spring.shardingsphere.mode.type=Standalone
#spring.shardingsphere.mode.repository.type=JDBC
# sharding-jdbc????
# ?????????????
spring.shardingsphere.datasource.names=m1
# ????????????????????????????
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/sharding_learn?useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=xiaojiebin
# ??user???????????????????????? l01.user_1,l01.user_2
spring.shardingsphere.sharding.tables.user.actual-data-nodes=m1.t_user_$->{1..2}
# ??user?????cid???? SNOWFLAKE(?????
spring.shardingsphere.sharding.tables.user.key-generator.column=id
spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE
#spring.shardingsphere.rules.sharding.tables.user.database-strategy.standard.sharding-column=id # ?????
#spring.shardingsphere.rules.sharding.tables.user.database-strategy.standard.sharding-algorithm-name=SNOWFLAKE # ??????
# ?????? ??id??????user_1????id????user_2
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=t_user_$->{id % 2 + 1}
# sql????
spring.shardingsphere.props.sql.show=true
spring.main.allow-bean-definition-overriding=true   